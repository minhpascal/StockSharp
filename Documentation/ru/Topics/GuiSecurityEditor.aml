<?xml version="1.0" encoding="utf-8"?>
<topic id="04856acb-88f2-4b39-8880-c9ce8e655801" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
<introduction>

      <para><codeEntityReference>T:StockSharp.Xaml.PropertyGrid.SecurityEditor</codeEntityReference> - визуальный компонент для поиска инструмента. 
      Состоит из комбинированного списка и кнопки, которая открывает окно поиска инструмента 
      <link xlink:href="3dc4f866-ab4e-4c74-a627-13727abdb966">SecurityPickerWindow</link>. Выбранный инструмент отображается в текстовом поле комбинированного списка.
      </para> 
      
      <para>
      	<legacyBold>Основные свойства</legacyBold>
      </para>
      
		<list class="bullet">
  			<listItem>
  				<para><codeEntityReference>P:StockSharp.Xaml.PropertyGrid.SecurityEditor.SecurityProvider</codeEntityReference> - поставщик информации об инструментах.</para>
  			</listItem>
  			<listItem>
  				<para><codeEntityReference>P:StockSharp.Xaml.PropertyGrid.SecurityEditor.SelectedSecurity</codeEntityReference> - выбранный инструмент.</para>
  			</listItem>
  			<listItem>
  				<para><codeEntityReference>P:StockSharp.Xaml.PropertyGrid.SecurityEditor.Text</codeEntityReference> - текст (id инструмента), отображаемый в поле комбинированного списка.</para>
  			</listItem>
		</list>
		
      <para>
      
      Ниже показан внешний вид компонента и фрагмент кода с его использованием. Данный пример взят из <legacyItalic>Samples/SmartCom/SampleSmartCandles</legacyItalic>.     
      
      </para>
      
<section>
 
 <sections>
 	<section address="SubSection1">
     	<content>
     	
        <mediaLink><image placement="left" xlink:href="Gui_SecurityEditor" /></mediaLink>
        
     	<para>
              Окно поиска инструмента <codeEntityReference>T:StockSharp.Xaml.SecurityPickerWindow</codeEntityReference>.
        </para>
                      <mediaLink><image placement="left" xlink:href="GUI_SecurityPicker" /></mediaLink>

        
        <code title="XAML" language="XAML">
	  				<![CDATA[
<Window
		x:Class="SampleSmartCandles.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
		xmlns:sx="http://schemas.stocksharp.com/xaml"
		xmlns:smartCom="clr-namespace:StockSharp.SmartCom.Xaml;assembly=StockSharp.SmartCom"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		Title="{x:Static loc:LocalizedStrings.XamlStr568}" Height="160" Width="715">
    <Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="100" />
			<ColumnDefinition Width="100" />
			<ColumnDefinition Width="100" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="28" />
			<RowDefinition Height="22" />
			<RowDefinition Height="22" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Orientation="Horizontal">
			<TextBlock HorizontalAlignment="Right"><Run Text="{x:Static loc:LocalizedStrings.Login}" />:</TextBlock>
			<TextBox x:Name="Login" Text="LWW1LPSL" Width="70" />

			<TextBlock HorizontalAlignment="Right"><Run Text="{x:Static loc:LocalizedStrings.Password}" />:</TextBlock>
			<PasswordBox x:Name="Password" Password="I0BJRR" Width="100" />

            <Label Content="{x:Static loc:LocalizedStrings.XamlStr651}" HorizontalAlignment="Right" />
			<smartCom:SmartComAddressComboBox x:Name="Address" SelectedIndex="1" />

			<Label Content="SmartCOM 3:" HorizontalAlignment="Right" />
			<CheckBox x:Name="IsSmartCom3" Margin="5" IsChecked="True" />

			<Button x:Name="ConnectBtn" Width="100" Content="{x:Static loc:LocalizedStrings.Connect}" Click="ConnectClick" />
		</StackPanel>

		<Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right">
			<TextBlock>
				<Run Text="{x:Static loc:LocalizedStrings.Security}"/><Run Text=":"/>
			</TextBlock>
		</Label>
		<sx:SecurityEditor x:Name="Security" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" SecuritySelected="OnSecuritySelected"  />
		
		<RadioButton x:Name="IsRealTime" IsChecked="True" Content="Real-Time" Grid.Column="0" Grid.Row="2" FlowDirection="RightToLeft" VerticalAlignment="Center" Click="OnChartTypeChanged" />
		<sx:CandleSettingsEditor x:Name="RealTimeSettings" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" VerticalAlignment="Center" />
		
		<RadioButton x:Name="IsHistory" Content="{x:Static loc:LocalizedStrings.History}" Grid.Column="0" Grid.Row="3" FlowDirection="RightToLeft" VerticalAlignment="Center" Click="OnChartTypeChanged" />
		<Grid x:Name="HistorySettings" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3" IsEnabled="False">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="100" />
				<ColumnDefinition />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			
			<ComboBox x:Name="HistoryInterval" Grid.Column="0" Grid.Row="0" />
            <xctk:DateTimePicker x:Name="From" Grid.Column="1" Grid.Row="0" />
            <xctk:DateTimePicker x:Name="To" Grid.Column="2" Grid.Row="0" />
		</Grid>
		
		<Button x:Name="ShowChart" Grid.Column="1" Width="100" Grid.Row="4" Grid.ColumnSpan="2" Content="{x:Static loc:LocalizedStrings.Str3200}" Height="22" IsEnabled="False" Click="ShowChartClick" />
	</Grid>
</Window>

	  				]]>
              </code> 
              
    <code title="C#" language="C#">

private void ConnectClick(object sender, RoutedEventArgs e)
{
	if (Login.Text.IsEmpty())
	{
		MessageBox.Show(this, LocalizedStrings.Str2974);
		return;
	}
	else if (Password.Password.IsEmpty())
	{
		MessageBox.Show(this, LocalizedStrings.Str2975);
		return;
	}

	// создаем подключение
	_trader = new SmartTrader
	{
		Login = Login.Text,
		Password = Password.Password,
		Address = Address.SelectedAddress,

		// применить нужную версию SmartCOM
		Version = IsSmartCom3.IsChecked == true ? SmartComVersions.V3 : SmartComVersions.V2,
	};

	// подписываемся на ошибку обработки данных (транзакций и маркет)
	_trader.Error += error =>
		this.GuiAsync(() => MessageBox.Show(this, error.ToString(), LocalizedStrings.Str2955));

	// подписываемся на ошибку подписки маркет-данных
	_trader.MarketDataSubscriptionFailed += (security, type, error) =>
		this.GuiAsync(() => MessageBox.Show(this, error.ToString(), LocalizedStrings.Str2956Params.Put(type, security)));

	Security.SecurityProvider = new FilterableSecurityProvider(_trader);

	_candleManager = new CandleManager(_trader);

     _trader.Connect();
	ConnectBtn.IsEnabled = false;
}
              </code> 
          </content>
      </section>
   </sections>
</section> 
      
    </introduction>
    
     <relatedTopics>
       <link xlink:href="3dc4f866-ab4e-4c74-a627-13727abdb966">SecurityPickerWindow</link>
    </relatedTopics>
    
  </developerConceptualDocument>
</topic>
